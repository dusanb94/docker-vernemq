kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "mainflux-mqtt-adapter"
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: "mainflux-mqtt"
    helm.sh/chart: {{ include "vernemq.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
rules:
  - apiGroups: [""] # "" indicates the core API group
    resources: ["pods"]
    verbs: ["get", "watch", "list"]
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ include "vernemq.serviceAccountName" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: "mainflux-mqtt"
    helm.sh/chart: {{ include "vernemq.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: "mainflux-mqtt-adapter"
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: "mainflux-mqtt"
    helm.sh/chart: {{ include "vernemq.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
subjects:
  - kind: ServiceAccount
    name: {{ include "vernemq.serviceAccountName" . }} {{/* Name is case sensitive */}}
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role {{/* this must be Role or ClusterRole */}}
  name: "mainflux-mqtt-adapter" {{/* this must match the name of the Role or ClusterRole you wish to bind to */}}
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: "mainflux-mqtt-adapter-headless"
  labels:
    app.kubernetes.io/name: "mainflux-mqtt"
    helm.sh/chart: {{ include "vernemq.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  clusterIP: None
  ports:
  - name: empd
    port: 4369
  - name: metrics
    port: 8888
    targetPort: prometheus
  selector:
    app.kubernetes.io/name: "mainflux-mqtt"
    app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: v1
kind: Service
metadata:
  name: "mainflux-mqtt-adapter"
  labels:
    app.kubernetes.io/name: "mainflux-mqtt"
    helm.sh/chart: {{ include "vernemq.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  {{- if .Values.service.labels }}
    {{ toYaml .Values.service.labels | nindent 4 }}
  {{- end }}
  {{- with .Values.service.annotations }}
  annotations:
    {{ toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if (or (eq .Values.service.type "ClusterIP") (empty .Values.service.type)) }}
  type: ClusterIP
  {{- if .Values.service.clusterIP }}
  clusterIP: {{ .Values.service.clusterIP }}
  {{- end }}
{{- else if eq .Values.service.type "LoadBalancer" }}
  type: {{ .Values.service.type }}
  {{- if .Values.service.loadBalancerIP }}
  loadBalancerIP: {{ .Values.service.loadBalancerIP }}
  {{- end }}
  {{- if .Values.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
    {{ toYaml .Values.service.loadBalancerSourceRanges | nindent 4 }}
  {{- end -}}
{{- else }}
  type: {{ .Values.service.type }}
{{- end }}
{{- if .Values.service.sessionAffinity }}
  sessionAffinity: {{ .Values.service.sessionAffinity }}
  {{- if .Values.service.sessionAffinityConfig }}
  sessionAffinityConfig:
    {{ toYaml .Values.service.sessionAffinityConfig | nindent 4 }}
  {{- end -}}
{{- end }}
{{- with .Values.service.externalIPs }}
  externalIPs:
    {{ toYaml . | nindent 4 }}
{{- end }}
  ports:
    {{- if .Values.service.mqtt.enabled }}
    - port: {{ .Values.service.mqtt.port }}
      targetPort: mqtt
      name: mqtt
      {{- if eq .Values.service.type "NodePort" }}
      nodePort: {{ .Values.service.mqtt.nodePort }}
      {{- end }}
    {{- end }}
    {{- if .Values.service.mqtts.enabled }}
    - port: {{ .Values.service.mqtts.port }}
      targetPort: mqtts
      name: mqtts
      {{- if eq .Values.service.type "NodePort" }}
      nodePort: {{ .Values.service.mqtts.nodePort }}
      {{- end }}
    {{- end }}
    {{- if .Values.service.ws.enabled }}
    - port: {{ .Values.service.ws.port }}
      targetPort: ws
      name: ws
      {{- if eq .Values.service.type "NodePort" }}
      nodePort: {{ .Values.service.ws.nodePort }}
      {{- end }}
    {{- end }}
    {{- if .Values.service.wss.enabled }}
    - port: {{ .Values.service.wss.port }}
      targetPort: wss
      name: wss
      {{- if eq .Values.service.type "NodePort" }}
      nodePort: {{ .Values.service.wss.nodePort }}
      {{- end }}
    {{- end }}
  selector:
    app.kubernetes.io/name: "mainflux-mqtt"
    app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "mainflux-mqtt-adapter"
  labels:
    app.kubernetes.io/name: "mainflux-mqtt"
    helm.sh/chart: {{ include "vernemq.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  serviceName: "mainflux-mqtt-adapter-headless"
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: {{ .Values.statefulset.podManagementPolicy }}
  updateStrategy:
    type: {{ .Values.statefulset.updateStrategy }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "mainflux-mqtt"
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "mainflux-mqtt"
        app.kubernetes.io/instance: {{ .Release.Name }}
    spec:
      serviceAccountName: {{ include "vernemq.serviceAccountName" . }}
      terminationGracePeriodSeconds: 60
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 1883
              name: mqtt
            - containerPort: 8883
              name: mqtts
            - containerPort: 4369
              name: epmd
            - containerPort: 44053
              name: vmq
            - containerPort: 8080
              name: ws
            - containerPort: 8443
              name: wss
            - containerPort: 8888
              name: prometheus
            {{- range tuple 9100 9101 9102 9103 9104 9105 9106 9107 9108 9109 }}
            - containerPort: {{ . }}
            {{- end }}
          env:
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: DOCKER_VERNEMQ_DISCOVERY_KUBERNETES
              value: "1"
            - name: DOCKER_VERNEMQ_KUBERNETES_LABEL_SELECTOR
              value: "app.kubernetes.io/name=mainflux-mqtt,app.kubernetes.io/instance={{ .Release.Name }}"
            {{- /* Add this localhost listener in order to get the port forwarding working */}}
            - name: DOCKER_VERNEMQ_LISTENER__TCP__LOCALHOST
              value: "127.0.0.1:1883"
            - name: DOCKER_VERNEMQ_LOG__CONSOLE__LEVEL
              value: {{ default .Values.defaults.logLevel .Values.mqtt.broker.logLevel }}
            - name: MF_MQTT_VERNEMQ_GRPC_POOL_SIZE
              value: "1000"
            - name: DOCKER_VERNEMQ_ALLOW_ANONYMOUS
              value: "on"
            - name: DOCKER_VERNEMQ_DISCOVERY_KUBERNETES
              value: "1"
            - name: DOCKER_VERNEMQ_ALLOW_REGISTER_DURING_NETSPLIT
              value: "on"
            - name: DOCKER_VERNEMQ_MAX_OFFLINE_MESSAGES
              value: "-1"
            - name: DOCKER_VERNEMQ_MAX_ONLINE_MESSAGES
              value: "-1"
            - name: DOCKER_VERNEMQ_MAX_INFLIGHT_MESSAGES
              value: "0"
            - name: DOCKER_VERNEMQ_PLUGINS__VMQ_PASSWD
              value: "off"
            - name: DOCKER_VERNEMQ_LISTENER__NR_OF_ACCEPTORS
              value: "1000"
            - name: DOCKER_VERNEMQ_LISTENER__TCP__LOCALHOST
              value: "127.0.0.1:1883"
            - name: DOCKER_VERNEMQ_LISTENER__WS__LOCALHOST
              value: "127.0.0.1:8080"
          resources:
            {{ toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            httpGet:
              path: /health
              port: prometheus
              scheme: HTTP
            initialDelaySeconds: {{ .Values.statefulset.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.statefulset.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.statefulset.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.statefulset.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.statefulset.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /health
              port: prometheus
              scheme: HTTP
            initialDelaySeconds: {{ .Values.statefulset.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.statefulset.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.statefulset.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.statefulset.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.statefulset.readinessProbe.failureThreshold }}
          volumeMounts:
            - name: logs
              mountPath: /vernemq/log
            - name: data
              mountPath: /vernemq/data
    {{- if eq .Values.podAntiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchExpressions:
                  - key: "app.kubernetes.io/name"
                    operator: In
                    values:
                      - "mainflux-mqtt"
    {{- else if eq .Values.podAntiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: "kubernetes.io/hostname"
                labelSelector:
                  matchExpressions:
                    - key: "app.kubernetes.io/name"
                      operator: In
                      values:
                        - "mainflux-mqtt"
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
    {{- end }}
      securityContext:
        {{ toYaml .Values.securityContext | nindent 8 }}
      volumes:
        - name: logs
          emptyDir: {}
        {{- range .Values.secretMounts }}
        - name: {{ .name }}
          secret:
            secretName: {{ .secretName }}
        {{- end }}
      {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
      {{- end }}
{{- if .Values.persistentVolume.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
        annotations:
        {{- range $key, $value := .Values.persistentVolume.annotations }}
          {{ $key }}: {{ $value }}
        {{- end }}
      spec:
        accessModes:
        {{- range .Values.persistentVolume.accessModes }}
          - {{ . | quote }}
        {{- end }}
        resources:
          requests:
            storage: {{ .Values.persistentVolume.size }}
      {{- if .Values.persistentVolume.storageClass }}
      {{- if (eq "-" .Values.persistentVolume.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistentVolume.storageClass }}"
      {{- end }}
      {{- end }}
{{- else }}
        - name: data
{{- end }}
